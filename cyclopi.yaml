esphome:
  name: "cyclopi"
  friendly_name: "CycloPi"
  comment: "CycloPi Backlight"
  platformio_options:
    board_build.flash_mode: dio
  on_boot:
    then:
      - script.execute: apply_light_state

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino

logger:

globals:
  - id: light_mode
    type: int
    initial_value: "2"  # 0 = off, 1 = solid, 2 = strobe
  - id: light_brightness
    type: int
    restore_value: true
    initial_value: "255"  # full brightness 0-255
  - id: light_color_red
    type: int
    restore_value: true
    initial_value: "255"
  - id: light_color_green
    type: int
    restore_value: true
    initial_value: "0"
  - id: light_color_blue
    type: int
    restore_value: true
    initial_value: "0"

script:
  - id: apply_light_state
    then:
      - lambda: |-
          if (id(light_mode) == 0) {
            id(backlight).turn_off().perform();
          } else if (id(light_mode) == 1) {
            id(backlight).turn_on().set_effect("strobe").perform();
          } else if (id(light_mode) == 2) {
            id(backlight).turn_on()
              .set_effect("None")
              .set_rgb((float)id(light_color_red)/255.0, (float)id(light_color_green)/255.0, (float)id(light_color_blue)/255.0)
              .set_brightness((float)id(light_brightness)/255.0)
              .perform();
          }

esp32_ble_server:
  manufacturer: "CycloPi"
  model: "Backlight"
  services:
    - uuid: "12345678-1234-5678-1234-56789abcdef0"
      advertise: true
      characteristics:
        # Light mode characteristic
        - id: light_mode_char
          uuid: "abcdef01-1234-5678-1234-56789abcdef0"
          description: "Light Mode: 0=Off,1=Solid,2=Effect"
          read: true
          write: true
          notify: true
          value:
            type: uint8_t
            data: 0
          descriptors:
            - uuid: 2901
              value: "Set light mode: 0=Off,1=Solid,2=Effect"
          on_write:
            then:
              - lambda: |-
                  uint8_t mode = x[0];
                  ESP_LOGD("ble", "Light mode written: %d", mode);
                  id(light_mode) = mode;
              - script.execute: apply_light_state

        # Brightness characteristic
        - id: light_brightness_char
          uuid: "abcdef02-1234-5678-1234-56789abcdef0"
          description: "Backlight Brightness (0-255)"
          read: true
          write: true
          notify: true
          value:
            type: uint8_t
            data: 255
          descriptors:
            - uuid: 2901
              value: "Set light brightness 0-255"
          on_write:
            then:
              - lambda: |-
                  uint8_t b = x[0];
                  id(light_brightness) = b;
                  ESP_LOGD("ble", "Brightness written: %d", id(light_brightness));
              - script.execute: apply_light_state

        # Color characteristic (RGB)
        - id: light_color_char
          uuid: "abcdef03-1234-5678-1234-56789abcdef0"
          description: "Backlight Color RGB"
          read: true
          write: true
          notify: true
          value: "0xFF0000"  # red as default
          descriptors:
            - uuid: 2901
              value: "Set light color: RGB bytes 0-255"
          on_write:
            then:
              - lambda: |-
                  uint8_t r = x[0];
                  uint8_t g = x[1];
                  uint8_t b = x[2];
                  id(light_color_red)   = r;
                  id(light_color_green) = g;
                  id(light_color_blue)  = b;
                  ESP_LOGD("ble", "Color written: R=%d G=%d B=%d", r, g, b);
              - script.execute: apply_light_state


# Sync BLE characteristics every 5s
interval:
  - interval: 5s
    then:
      - ble_server.characteristic.set_value:
          id: light_mode_char
          value: !lambda "return std::vector<uint8_t>{ (uint8_t)id(light_mode) };"
      - ble_server.characteristic.notify:
          id: light_mode_char
      - ble_server.characteristic.set_value:
          id: light_brightness_char
          value: !lambda "return std::vector<uint8_t>{ (uint8_t)id(light_brightness) };"
      - ble_server.characteristic.notify:
          id: light_brightness_char
      - ble_server.characteristic.set_value:
          id: light_color_char
          value: !lambda "return std::vector<uint8_t>{ (uint8_t)id(light_color_red), (uint8_t)id(light_color_green), (uint8_t)id(light_color_blue) };"
      - ble_server.characteristic.notify:
          id: light_color_char

light:
  - platform: esp32_rmt_led_strip
    rgb_order: RGB
    chipset: ws2811
    id: backlight
    pin: GPIO14
    num_leds: 64
    color_correct: [100%, 70%, 100%]
    effects:
      - strobe:
          name: 'strobe'
          colors:
            - state: true
              brightness: 100%
              red: 100%
              green: 0%
              blue: 0%
              duration: 300ms
            - state: true
              brightness: 100%
              red: 100%
              green: 75%
              blue: 0%
              duration: 50ms
            - state: false
              duration: 150ms
